/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualrecipebookapp;

import javax.swing.DefaultListModel;

/**
 *
 * @author Imran
 */
public class MainJFrame extends javax.swing.JFrame {
Kitchen myKitchen;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
         myKitchen = new Kitchen();
       jListOfRecipes.setSelectionMode(NORMAL);
        myKitchen.getRecipeList(jListOfRecipes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMainPanel = new javax.swing.JPanel();
        jMainTabbedPane = new javax.swing.JTabbedPane();
        jRecipeBookPanel = new javax.swing.JPanel();
        jDisplayRecipesButton = new javax.swing.JButton();
        jInternalRecipeFrame = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jRecipeTextArea = new javax.swing.JTextArea();
        jLabelAppendImage = new javax.swing.JLabel();
        jTextFieldRecipeSearch = new javax.swing.JTextField();
        jButtonSearchRecipe = new javax.swing.JButton();
        jCookingTimeComboBox = new javax.swing.JComboBox<>();
        jRegionComboBox = new javax.swing.JComboBox<>();
        jSeasonComboBox = new javax.swing.JComboBox<>();
        jAvailableIngredientsBox = new javax.swing.JCheckBox();
        jGlutenFreeCheckBox = new javax.swing.JCheckBox();
        jMeatFreeCheckBox = new javax.swing.JCheckBox();
        jAddRecipeButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListOfRecipes = new javax.swing.JList<>();
        jSeasonLabel = new javax.swing.JLabel();
        jRegionLabel = new javax.swing.JLabel();
        jCookingLabel = new javax.swing.JLabel();
        jKitchenPanel = new javax.swing.JPanel();
        jButtonMenuRemove = new javax.swing.JButton();
        jButtonOrder = new javax.swing.JButton();
        jButtonMakeOrder = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListMenu = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListOrder = new javax.swing.JList<>();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDisplayRecipesButton.setText("Display RecipeBook");
        jDisplayRecipesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayRecipesButtonActionPerformed(evt);
            }
        });

        jInternalRecipeFrame.setVisible(true);
        jInternalRecipeFrame.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                jInternalRecipeFrameInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jRecipeTextArea.setColumns(20);
        jRecipeTextArea.setRows(5);
        jScrollPane2.setViewportView(jRecipeTextArea);

        jLabelAppendImage.setText("jAppendImageLabel");

        javax.swing.GroupLayout jInternalRecipeFrameLayout = new javax.swing.GroupLayout(jInternalRecipeFrame.getContentPane());
        jInternalRecipeFrame.getContentPane().setLayout(jInternalRecipeFrameLayout);
        jInternalRecipeFrameLayout.setHorizontalGroup(
            jInternalRecipeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalRecipeFrameLayout.createSequentialGroup()
                .addGroup(jInternalRecipeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalRecipeFrameLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalRecipeFrameLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabelAppendImage, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jInternalRecipeFrameLayout.setVerticalGroup(
            jInternalRecipeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalRecipeFrameLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelAppendImage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(304, Short.MAX_VALUE))
        );

        jButtonSearchRecipe.setText("Search Recipe");
        jButtonSearchRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchRecipeActionPerformed(evt);
            }
        });

        jCookingTimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15", "30", "45", "60", "90" }));
        jCookingTimeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCookingTimeComboBoxActionPerformed(evt);
            }
        });

        jRegionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mediterranian", "India", "South America", "East Asia", "Caribbean" }));
        jRegionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegionComboBoxActionPerformed(evt);
            }
        });

        jSeasonComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Spring", "Summer", "Autumn", "Winter" }));
        jSeasonComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSeasonComboBoxActionPerformed(evt);
            }
        });

        jAvailableIngredientsBox.setText("Available in kitchen");
        jAvailableIngredientsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAvailableIngredientsBoxActionPerformed(evt);
            }
        });

        jGlutenFreeCheckBox.setText("Gluten-free");
        jGlutenFreeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGlutenFreeCheckBoxActionPerformed(evt);
            }
        });

        jMeatFreeCheckBox.setText("Meat-free");
        jMeatFreeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeatFreeCheckBoxActionPerformed(evt);
            }
        });

        jAddRecipeButton.setText("Add Recipe to Kitchen");
        jAddRecipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddRecipeButtonActionPerformed(evt);
            }
        });

        jListOfRecipes.setModel(new DefaultListModel());
        jListOfRecipes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListOfRecipesMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jListOfRecipes);

        jSeasonLabel.setText("Season:");

        jRegionLabel.setText("Region:");

        jCookingLabel.setText("Cooking Time (mins):");

        javax.swing.GroupLayout jRecipeBookPanelLayout = new javax.swing.GroupLayout(jRecipeBookPanel);
        jRecipeBookPanel.setLayout(jRecipeBookPanelLayout);
        jRecipeBookPanelLayout.setHorizontalGroup(
            jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jMeatFreeCheckBox)
                                .addComponent(jGlutenFreeCheckBox)
                                .addComponent(jDisplayRecipesButton)
                                .addComponent(jAvailableIngredientsBox))
                            .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                                    .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeasonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jRegionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(30, 30, 30)
                                    .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeasonComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jRegionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                                    .addComponent(jCookingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jCookingTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jAddRecipeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButtonSearchRecipe)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldRecipeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jInternalRecipeFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        jRecipeBookPanelLayout.setVerticalGroup(
            jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRecipeBookPanelLayout.createSequentialGroup()
                .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jRecipeBookPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRegionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRegionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSeasonComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeasonLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCookingTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCookingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jGlutenFreeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jMeatFreeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jAvailableIngredientsBox))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRecipeBookPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDisplayRecipesButton)
                    .addComponent(jAddRecipeButton))
                .addGap(56, 56, 56)
                .addGroup(jRecipeBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearchRecipe)
                    .addComponent(jTextFieldRecipeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRecipeBookPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jInternalRecipeFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(988, 988, 988))
        );

        jMainTabbedPane.addTab("Recipebook", jRecipeBookPanel);

        jButtonMenuRemove.setText("Remove Recipe");
        jButtonMenuRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuRemoveActionPerformed(evt);
            }
        });

        jButtonOrder.setText("Order This Recipe");
        jButtonOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrderActionPerformed(evt);
            }
        });

        jButtonMakeOrder.setText("Place Order");
        jButtonMakeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMakeOrderActionPerformed(evt);
            }
        });

        jListMenu.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(jListMenu);

        jListOrder.setModel(new DefaultListModel());
        jScrollPane7.setViewportView(jListOrder);

        javax.swing.GroupLayout jKitchenPanelLayout = new javax.swing.GroupLayout(jKitchenPanel);
        jKitchenPanel.setLayout(jKitchenPanelLayout);
        jKitchenPanelLayout.setHorizontalGroup(
            jKitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jKitchenPanelLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(jKitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jKitchenPanelLayout.createSequentialGroup()
                        .addComponent(jButtonOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonMenuRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jButtonMakeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jKitchenPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jKitchenPanelLayout.setVerticalGroup(
            jKitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jKitchenPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jKitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addGap(19, 19, 19)
                .addGroup(jKitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMenuRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMakeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        jMainTabbedPane.addTab("Kitchen", jKitchenPanel);

        javax.swing.GroupLayout jMainPanelLayout = new javax.swing.GroupLayout(jMainPanel);
        jMainPanel.setLayout(jMainPanelLayout);
        jMainPanelLayout.setHorizontalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelLayout.createSequentialGroup()
                .addComponent(jMainTabbedPane)
                .addContainerGap())
        );
        jMainPanelLayout.setVerticalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelLayout.createSequentialGroup()
                .addComponent(jMainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar.add(jMenu2);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDisplayRecipesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayRecipesButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        myKitchen.getRecipeList(jListOfRecipes);
        
    }//GEN-LAST:event_jDisplayRecipesButtonActionPerformed

    private void jButtonSearchRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchRecipeActionPerformed
        
        DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        myKitchen.searchRecipeByName(jListOfRecipes, jTextFieldRecipeSearch.getText());
      
    }//GEN-LAST:event_jButtonSearchRecipeActionPerformed

    private void jInternalRecipeFrameInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_jInternalRecipeFrameInternalFrameActivated
        
    }//GEN-LAST:event_jInternalRecipeFrameInternalFrameActivated

    private void jButtonMenuRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuRemoveActionPerformed

        String getListName = jListOfRecipes.getModel().getElementAt(jListOfRecipes.getSelectedIndex());
        String recipeName = getListName;
        myKitchen.recipeRemove(jListMenu,recipeName);
        
    }//GEN-LAST:event_jButtonMenuRemoveActionPerformed

    private void jButtonOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrderActionPerformed

     myKitchen.recipeOrder(jListOrder);
        
    }//GEN-LAST:event_jButtonOrderActionPerformed

    private void jButtonMakeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMakeOrderActionPerformed
        
        myKitchen.recipeOrderIngredients();
          
        DefaultListModel model = (DefaultListModel)
        jListOrder.getModel();
        for (int i = model.getSize(); i >= 1; i--)
        {
            model.removeElementAt(i-1);
        }
      
        
      
    }//GEN-LAST:event_jButtonMakeOrderActionPerformed

    private void jAddRecipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddRecipeButtonActionPerformed
     
        String getListName = jListOfRecipes.getModel().getElementAt(jListOfRecipes.getSelectedIndex());
        String recipeName = getListName;
        myKitchen.recipeAdd(jListMenu,recipeName);
    }//GEN-LAST:event_jAddRecipeButtonActionPerformed

    public void deleteRecipeContents()
{
    DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        jRecipeTextArea.setText("");
}
    private void jAvailableIngredientsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAvailableIngredientsBoxActionPerformed
        // TODO add your handling code here:     
        DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        myKitchen.searchRecipeAvailable(jListOfRecipes);
        
    }//GEN-LAST:event_jAvailableIngredientsBoxActionPerformed

    private void jMeatFreeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeatFreeCheckBoxActionPerformed
        // TODO add your handling code here
          DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        myKitchen.getMyRecipeList().searchRecipeByMeatFree(jListOfRecipes, jMeatFreeCheckBox.isSelected());
    }//GEN-LAST:event_jMeatFreeCheckBoxActionPerformed

    private void jGlutenFreeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGlutenFreeCheckBoxActionPerformed
        DefaultListModel model = (DefaultListModel)
        jListOfRecipes.getModel();
        for (int i = model.getSize(); i >= 1; i--) 
        {
            model.removeElementAt(i-1);                
        }
        myKitchen.getMyRecipeList().searchRecipeByGluten(jListOfRecipes, jGlutenFreeCheckBox.isSelected());
    }//GEN-LAST:event_jGlutenFreeCheckBoxActionPerformed

    private void jRegionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegionComboBoxActionPerformed
       
        deleteRecipeContents();
        String region = (String) jRegionComboBox.getSelectedItem();
        myKitchen.getMyRecipeList().searchRecipeByRegion(jListOfRecipes, region);
        
    }//GEN-LAST:event_jRegionComboBoxActionPerformed

    private void jCookingTimeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCookingTimeComboBoxActionPerformed
        deleteRecipeContents();
        String cookingTime = (String) jCookingTimeComboBox.getSelectedItem();
        myKitchen.getMyRecipeList().searchRecipeByCookingTime(jListOfRecipes, cookingTime);
    }//GEN-LAST:event_jCookingTimeComboBoxActionPerformed

    private void jListOfRecipesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListOfRecipesMouseReleased
       jRecipeTextArea.setText("");
        String getListName = jListOfRecipes.getModel().getElementAt(jListOfRecipes.getSelectedIndex());  
        myKitchen.SearchProduct(jRecipeTextArea,jLabelAppendImage, getListName);
    }//GEN-LAST:event_jListOfRecipesMouseReleased

    private void jSeasonComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSeasonComboBoxActionPerformed
        // TODO add your handling code here:
        deleteRecipeContents();
        String season = (String) jSeasonComboBox.getSelectedItem();
        myKitchen.getMyRecipeList().searchRecipeBySeason(jListOfRecipes, season);
    }//GEN-LAST:event_jSeasonComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddRecipeButton;
    private javax.swing.JCheckBox jAvailableIngredientsBox;
    private javax.swing.JButton jButtonMakeOrder;
    private javax.swing.JButton jButtonMenuRemove;
    private javax.swing.JButton jButtonOrder;
    private javax.swing.JButton jButtonSearchRecipe;
    private javax.swing.JLabel jCookingLabel;
    private javax.swing.JComboBox<String> jCookingTimeComboBox;
    private javax.swing.JButton jDisplayRecipesButton;
    private javax.swing.JCheckBox jGlutenFreeCheckBox;
    private javax.swing.JInternalFrame jInternalRecipeFrame;
    private javax.swing.JPanel jKitchenPanel;
    private javax.swing.JLabel jLabelAppendImage;
    private javax.swing.JList<String> jListMenu;
    private javax.swing.JList<String> jListOfRecipes;
    private javax.swing.JList<String> jListOrder;
    private javax.swing.JPanel jMainPanel;
    private javax.swing.JTabbedPane jMainTabbedPane;
    private javax.swing.JCheckBox jMeatFreeCheckBox;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jRecipeBookPanel;
    private javax.swing.JTextArea jRecipeTextArea;
    private javax.swing.JComboBox<String> jRegionComboBox;
    private javax.swing.JLabel jRegionLabel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JComboBox<String> jSeasonComboBox;
    private javax.swing.JLabel jSeasonLabel;
    private javax.swing.JTextField jTextFieldRecipeSearch;
    // End of variables declaration//GEN-END:variables
}
